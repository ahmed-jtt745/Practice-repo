/*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */
@import url('https://fonts.googleapis.com/css2?family=Alan+Sans:wght@300..900&display=swap');
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-amber-50: oklch(98.7% 0.022 95.277);
    --color-amber-100: oklch(96.2% 0.059 95.617);
    --color-amber-200: oklch(92.4% 0.12 95.746);
    --color-amber-300: oklch(87.9% 0.169 91.605);
    --color-amber-400: oklch(82.8% 0.189 84.429);
    --color-amber-500: oklch(76.9% 0.188 70.08);
    --color-green-200: oklch(92.5% 0.084 155.995);
    --color-green-300: oklch(87.1% 0.15 154.449);
    --color-green-400: oklch(79.2% 0.209 151.711);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-700: oklch(52.7% 0.154 150.069);
    --color-green-900: oklch(39.3% 0.095 152.535);
    --color-blue-300: oklch(80.9% 0.105 251.813);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --font-weight-bold: 700;
    --tracking-wider: 0.05em;
    --radius-2xl: 1rem;
    --radius-4xl: 2rem;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --font-alan: "Alan Sans", sans-serif;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .fixed {
    position: fixed;
  }
  .top-18 {
    top: calc(var(--spacing) * 18);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .z-\[-1\] {
    z-index: -1;
  }
  .container {
    width: 100%;
    @media (width >= 768px) {
      max-width: 768px;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .m-0 {
    margin: calc(var(--spacing) * 0);
  }
  .m-4 {
    margin: calc(var(--spacing) * 4);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-80 {
    margin-top: calc(var(--spacing) * 80);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .ml-90 {
    margin-left: calc(var(--spacing) * 90);
  }
  .ml-auto {
    margin-left: auto;
  }
  .box-border {
    box-sizing: border-box;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .table {
    display: table;
  }
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  .size-80 {
    width: calc(var(--spacing) * 80);
    height: calc(var(--spacing) * 80);
  }
  .size-100 {
    width: calc(var(--spacing) * 100);
    height: calc(var(--spacing) * 100);
  }
  .h-50 {
    height: calc(var(--spacing) * 50);
  }
  .h-auto {
    height: auto;
  }
  .h-fit {
    height: fit-content;
  }
  .h-full {
    height: 100%;
  }
  .h-screen {
    height: 100vh;
  }
  .w-1 {
    width: calc(var(--spacing) * 1);
  }
  .w-1\/2 {
    width: calc(1/2 * 100%);
  }
  .w-\[70\%\] {
    width: 70%;
  }
  .w-\[80\%\] {
    width: 80%;
  }
  .w-\[100\%\] {
    width: 100%;
  }
  .w-\[300px\] {
    width: 300px;
  }
  .w-auto {
    width: auto;
  }
  .w-full {
    width: 100%;
  }
  .max-w-\[1200px\] {
    max-width: 1200px;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-col-reverse {
    flex-direction: column-reverse;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-evenly {
    justify-content: space-evenly;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-10 {
    gap: calc(var(--spacing) * 10);
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-4xl {
    border-radius: var(--radius-4xl);
  }
  .rounded-\[1rem\] {
    border-radius: 1rem;
  }
  .rounded-\[2rem\] {
    border-radius: 2rem;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-8 {
    border-style: var(--tw-border-style);
    border-width: 8px;
  }
  .border-\[2px\] {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-\[\#FF650D\] {
    border-color: #FF650D;
  }
  .border-black {
    border-color: var(--color-black);
  }
  .border-green-300 {
    border-color: var(--color-green-300);
  }
  .border-green-400 {
    border-color: var(--color-green-400);
  }
  .border-transparent {
    border-color: transparent;
  }
  .bg-\[\#121212\] {
    background-color: #121212;
  }
  .bg-\[\#151515\] {
    background-color: #151515;
  }
  .bg-\[\#222222\] {
    background-color: #222222;
  }
  .bg-\[\#FF650D\] {
    background-color: #FF650D;
  }
  .bg-amber-50 {
    background-color: var(--color-amber-50);
  }
  .bg-amber-200 {
    background-color: var(--color-amber-200);
  }
  .bg-amber-300 {
    background-color: var(--color-amber-300);
  }
  .bg-amber-400 {
    background-color: var(--color-amber-400);
  }
  .bg-amber-500 {
    background-color: var(--color-amber-500);
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-blue-300 {
    background-color: var(--color-blue-300);
  }
  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }
  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-green-200 {
    --tw-gradient-from: var(--color-green-200);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-green-400 {
    --tw-gradient-from: var(--color-green-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-green-700 {
    --tw-gradient-to: var(--color-green-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-green-900 {
    --tw-gradient-to: var(--color-green-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .object-cover {
    object-fit: cover;
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }
  .pr-90 {
    padding-right: calc(var(--spacing) * 90);
  }
  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }
  .pl-50 {
    padding-left: calc(var(--spacing) * 50);
  }
  .text-center {
    text-align: center;
  }
  .text-justify {
    text-align: justify;
  }
  .align-middle {
    vertical-align: middle;
  }
  .font-alan {
    font-family: var(--font-alan);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-\[0\.5rem\] {
    font-size: 0.5rem;
  }
  .text-\[0\.8rem\] {
    font-size: 0.8rem;
  }
  .text-\[2\.5rem\] {
    font-size: 2.5rem;
  }
  .text-\[2\.8rem\] {
    font-size: 2.8rem;
  }
  .text-\[4rem\] {
    font-size: 4rem;
  }
  .text-\[20px\] {
    font-size: 20px;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .tracking-\[1px\] {
    --tw-tracking: 1px;
    letter-spacing: 1px;
  }
  .tracking-wider {
    --tw-tracking: var(--tracking-wider);
    letter-spacing: var(--tracking-wider);
  }
  .text-\[\#FF650D\] {
    color: #FF650D;
  }
  .text-black {
    color: var(--color-black);
  }
  .text-green-400 {
    color: var(--color-green-400);
  }
  .text-green-500 {
    color: var(--color-green-500);
  }
  .text-white {
    color: var(--color-white);
  }
  .underline {
    text-decoration-line: underline;
  }
  .shadow-2xl {
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-amber-200 {
    --tw-shadow-color: oklch(92.4% 0.12 95.746);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, var(--color-amber-200) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-green-900 {
    --tw-shadow-color: oklch(39.3% 0.095 152.535);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, var(--color-green-900) var(--tw-shadow-alpha), transparent);
    }
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .ease-in {
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .hover\:translate-y-\[-5px\] {
    &:hover {
      @media (hover: hover) {
        --tw-translate-y: -5px;
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:border-\[\#FF650D\] {
    &:hover {
      @media (hover: hover) {
        border-color: #FF650D;
      }
    }
  }
  .hover\:bg-\[\#d05006\] {
    &:hover {
      @media (hover: hover) {
        background-color: #d05006;
      }
    }
  }
  .hover\:bg-black {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-black);
      }
    }
  }
  .hover\:text-amber-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-amber-100);
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .sm\:static {
    @media (width >= 768px) {
      position: static;
    }
  }
  .sm\:z-10 {
    @media (width >= 768px) {
      z-index: 10;
    }
  }
  .sm\:block {
    @media (width >= 768px) {
      display: block;
    }
  }
  .sm\:flex {
    @media (width >= 768px) {
      display: flex;
    }
  }
  .sm\:grid {
    @media (width >= 768px) {
      display: grid;
    }
  }
  .sm\:hidden {
    @media (width >= 768px) {
      display: none;
    }
  }
  .sm\:h-auto {
    @media (width >= 768px) {
      height: auto;
    }
  }
  .sm\:w-\[30\%\] {
    @media (width >= 768px) {
      width: 30%;
    }
  }
  .sm\:w-\[40\%\] {
    @media (width >= 768px) {
      width: 40%;
    }
  }
  .sm\:w-\[60\%\] {
    @media (width >= 768px) {
      width: 60%;
    }
  }
  .sm\:w-\[65\%\] {
    @media (width >= 768px) {
      width: 65%;
    }
  }
  .sm\:translate-0 {
    @media (width >= 768px) {
      --tw-translate-x: calc(var(--spacing) * 0);
      --tw-translate-y: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .sm\:\[grid-template-columns\:300px_1fr\] {
    @media (width >= 768px) {
      grid-template-columns: 300px 1fr;
    }
  }
  .sm\:flex-row {
    @media (width >= 768px) {
      flex-direction: row;
    }
  }
  .sm\:items-center {
    @media (width >= 768px) {
      align-items: center;
    }
  }
  .sm\:justify-center {
    @media (width >= 768px) {
      justify-content: center;
    }
  }
  .sm\:justify-end {
    @media (width >= 768px) {
      justify-content: flex-end;
    }
  }
  .sm\:justify-start {
    @media (width >= 768px) {
      justify-content: flex-start;
    }
  }
  .sm\:gap-8 {
    @media (width >= 768px) {
      gap: calc(var(--spacing) * 8);
    }
  }
  .sm\:border-\[\#121212\] {
    @media (width >= 768px) {
      border-color: #121212;
    }
  }
  .sm\:bg-\[\#ff650d\] {
    @media (width >= 768px) {
      background-color: #ff650d;
    }
  }
  .sm\:p-0 {
    @media (width >= 768px) {
      padding: calc(var(--spacing) * 0);
    }
  }
  .sm\:p-8 {
    @media (width >= 768px) {
      padding: calc(var(--spacing) * 8);
    }
  }
  .sm\:text-\[0\.9rem\] {
    @media (width >= 768px) {
      font-size: 0.9rem;
    }
  }
  .sm\:text-\[1\.3rem\] {
    @media (width >= 768px) {
      font-size: 1.3rem;
    }
  }
  .sm\:text-\[1rem\] {
    @media (width >= 768px) {
      font-size: 1rem;
    }
  }
  .sm\:text-\[3\.2rem\] {
    @media (width >= 768px) {
      font-size: 3.2rem;
    }
  }
  .sm\:text-\[3\.4rem\] {
    @media (width >= 768px) {
      font-size: 3.4rem;
    }
  }
  .sm\:ease-in-out {
    @media (width >= 768px) {
      --tw-ease: var(--ease-in-out);
      transition-timing-function: var(--ease-in-out);
    }
  }
  .sm\:\[clip-path\:polygon\(35\%_0\,100\%_0\,100\%_100\%\,0_100\%\)\] {
    @media (width >= 768px) {
      clip-path: polygon(35% 0,100% 0,100% 100%,0 100%);
    }
  }
  .md\:flex {
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .md\:hidden {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .md\:w-\[30\%\] {
    @media (width >= 48rem) {
      width: 30%;
    }
  }
  .md\:justify-center {
    @media (width >= 48rem) {
      justify-content: center;
    }
  }
  .\[\&_\*\]\:flex {
    & * {
      display: flex;
    }
  }
  .\[\&_\*\]\:size-50 {
    & * {
      width: calc(var(--spacing) * 50);
      height: calc(var(--spacing) * 50);
    }
  }
  .\[\&_\*\]\:h-60 {
    & * {
      height: calc(var(--spacing) * 60);
    }
  }
  .\[\&_\*\]\:w-50 {
    & * {
      width: calc(var(--spacing) * 50);
    }
  }
  .\[\&_\*\]\:w-full {
    & * {
      width: 100%;
    }
  }
  .\[\&_\*\]\:max-w-150 {
    & * {
      max-width: calc(var(--spacing) * 150);
    }
  }
  .\[\&_\*\]\:justify-center {
    & * {
      justify-content: center;
    }
  }
  .\[\&_\*\]\:border-8 {
    & * {
      border-style: var(--tw-border-style);
      border-width: 8px;
    }
  }
  .\[\&_\*\]\:bg-black {
    & * {
      background-color: var(--color-black);
    }
  }
  .\[\&_\*\]\:py-2 {
    & * {
      padding-block: calc(var(--spacing) * 2);
    }
  }
  .\[\&_\*\]\:font-bold {
    & * {
      --tw-font-weight: var(--font-weight-bold);
      font-weight: var(--font-weight-bold);
    }
  }
  .\[\&_\*\]\:tracking-\[4px\] {
    & * {
      --tw-tracking: 4px;
      letter-spacing: 4px;
    }
  }
  .\[\&_\*\]\:opacity-50 {
    & * {
      opacity: 50%;
    }
  }
  .\[\&_\*\]\:transition-all {
    & * {
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .\[\&_\*\]\:duration-200 {
    & * {
      --tw-duration: 200ms;
      transition-duration: 200ms;
    }
  }
  .\[\&_\*\]\:hover\:bg-amber-200 {
    & * {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-amber-200);
        }
      }
    }
  }
  .\[\&_\*\]\:hover\:opacity-100 {
    & * {
      &:hover {
        @media (hover: hover) {
          opacity: 100%;
        }
      }
    }
  }
  .sm\:\[\&_\*\]\:w-fit {
    @media (width >= 768px) {
      & * {
        width: fit-content;
      }
    }
  }
  .sm\:\[\&_\*\]\:opacity-50 {
    @media (width >= 768px) {
      & * {
        opacity: 50%;
      }
    }
  }
  .sm\:\[\&_\*\]\:transition-all {
    @media (width >= 768px) {
      & * {
        transition-property: all;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
      }
    }
  }
  .sm\:\[\&_\*\]\:duration-200 {
    @media (width >= 768px) {
      & * {
        --tw-duration: 200ms;
        transition-duration: 200ms;
      }
    }
  }
  .sm\:\[\&_\*\]\:hover\:bg-transparent {
    @media (width >= 768px) {
      & * {
        &:hover {
          @media (hover: hover) {
            background-color: transparent;
          }
        }
      }
    }
  }
  .sm\:\[\&_\*\]\:hover\:opacity-100 {
    @media (width >= 768px) {
      & * {
        &:hover {
          @media (hover: hover) {
            opacity: 100%;
          }
        }
      }
    }
  }
}
@layer components {
  .hide {
    --tw-translate-y: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .show {
    --tw-translate-y: 0;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .grid-mobile {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(230px, 1fr));
    place-items: center;
    gap: 1rem;
  }
  .cut {
    clip-path: polygon(35% 0, 100% 0, 100% 100%, 0 100%);
  }
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
    }
  }
}
